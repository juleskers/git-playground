== How-to passwordless login / commits ==

By now you're probably annoyed by repeatedly typing the demo-password again and again
Fortunately, git supports password-less SSH public-key sign-in

Here we'll set this up.

SSH public/private keys mean you have a PRIVATE private key, a secret..
intrinsically, mathematically coupled to this is a PUBLIC public key that you can shout to everyone.
Due to some awesome maths involving prime-factorisation, eliptic curves and computability
you can PROVE that you know the secret private key, without telling the secret, to anyone who has the public key.
(A "zero knowledge proof of identity")

== steps ==
1) generate a new ssh keypair (public + private key)
     If you already have keys, you are welcome to specify a non-default file-name to save it to.
     It can make sense to have many keypairs, one pair for each use-case.

  $ cd ~/.ssh
  $ ssh-keygen -t rsa -C "YOURNAME@dkfz-heidelberg.de"
  # Generating public/private rsa key pair.
  # (text omitted)
  # Your public key has been saved in /home/<YOURNAME>/.ssh/id_rsa.pub

